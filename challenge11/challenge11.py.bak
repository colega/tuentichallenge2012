import sys;
import fileinput;
from operator import itemgetter;
from time import time;

charScore = dict();
for char in ["A", "E", "I", "L", "N", "O", "R", "S", "T", "U"]:
	charScore[char] = 1;
for char in ["D", "G"]:
	charScore[char] = 2;
for char in ["B", "C", "M", "P"]:
	charScore[char] = 3;
for char in ["F", "H", "V", "W", "Y"]:
	charScore[char] = 4;
for char in ["K"]:
	charScore[char] = 5;
for char in ["J", "X"]:
	charScore[char] = 8;
for char in ["Q", "Z"]:
	charScore[char] = 10;

def makeCharSet(word):
	charSet = set()
	charDict = dict();
	for char in word:
		try:
			charDict[char]+=1;
		except:
			charDict[char]=1;
	for char in charDict:
		for i in xrange(charDict[char]):
			charSet.add(char+str(i));
	return charSet;
def main():
	start = time();
	words = {};
	for line in fileinput.input('descrambler_wordlist.txt'):
		word = line.strip();
		wordScore = 0;
		charSet = set();
		for char in word:
			charSet.add(char);
			wordScore += charScore[char];
		try:
			words[wordScore].append([word,len(charSet)]);
		except:
			words[wordScore] = [[word,len(charSet),makeCharSet(word)]]
	for word in words:
		words[word] = sorted(words[word],key=itemgetter(0,1));
	
	scores = sorted(words.keys(), reverse=True);
	
	testCasesNumber = int(sys.stdin.next().strip());
	testCaseNumber = 0;
	while testCaseNumber < testCasesNumber:
		rack,board = sys.stdin.next().strip().split(' ');
		options = []
		for char in board:
			charSet = makeCharSet(rack+char);
			s = 0;
			found = False;
			while (not found and s<len(scores)):
				score = scores[s];
				i = 0;
				while (not found and i<len(words[score])):
					try:
						if (not words[score][i][2].difference(charSet)):
							options+=[(words[score][i][0], 100-score)];
							found = True;
					except:
						words[score][i].append(makeCharSet(words[score][i][0]));
						if (not words[score][i][2].difference(charSet)):
							options+=[(words[score][i][0], 100-score)];
							found = True;
					i+=1;
				s+=1;
		options = sorted(options, key=itemgetter(1,0));
		print "%s %d"%(options[0][0],100-options[0][1]);
		
		testCaseNumber+=1;
	print time()-start;

if __name__ == "__main__":
	main();
